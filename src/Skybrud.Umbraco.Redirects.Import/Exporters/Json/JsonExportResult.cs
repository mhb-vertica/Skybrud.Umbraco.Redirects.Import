using System;
using System.Text;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace Skybrud.Umbraco.Redirects.Import.Exporters.Json;

/// <summary>
/// Class representing the result of an export of redirects to a <strong>JSON</strong> file.
/// </summary>
public class JsonExportResult : IExportResult {

    private readonly JObject _json;

    #region Properties

    /// <summary>
    /// Gets the unique key of the export result.
    /// </summary>
    public Guid Key { get; }

    /// <summary>
    /// Gets the content type of the file generated by the result.
    /// </summary>
    public string ContentType => RedirectsImportConstants.ContentTypes.Json;

    /// <summary>
    /// Gets the file name of the file generated by the result.
    /// </summary>
    public string FileName { get; } = $"Redirects_{DateTime.UtcNow:yyyyMMddHHmmss}.json";

    #endregion

    #region Constructors

    /// <summary>
    /// Initializes a new instance based on the specified <paramref name="key"/> and <paramref name="json"/> object.
    /// </summary>
    /// <param name="key">The unique key.</param>
    /// <param name="json">A JSON object representing the exported redirects.</param>
    public JsonExportResult(Guid key, JObject json) {
        _json = json;
        Key = key;
    }

    #endregion

    #region Member methods

    /// <summary>
    /// Returns the bytes of the exported file.
    /// </summary>
    /// <param name="options">The export options.</param>
    /// <returns>An array of <see cref="byte"/>.</returns>
    public byte[] GetBytes(IExportOptions options) {
        return Encoding.UTF8.GetBytes(_json.ToString((options as JsonExportOptions)?.Formatting ?? Formatting.None));
    }

    #endregion

}